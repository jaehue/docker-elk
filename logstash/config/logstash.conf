input {
    beats {
        port => 5044
        codec => plain {
            charset => "UTF-8"
        }
    }
    tcp {
        port => 5000
    }
}

filter {
    if [type] =~ "nginx-access2" {
        # ignore log comments
        if [message] =~ "^#" {
            drop {}
        }
        grok {
            add_field => {
                "app_name" => "NGINX_APP"
                "urls" => "%{url}"
            }
            match => ["message", "%{IPORHOST:clienthost} - %{USERNAME:username} \[%{HTTPDATE:log_timestamp}\] \"%{WORD:method} (?:%{URIPATH:url}(?:%{URIPARAM:query})?|%{URI:url}) %{DATA:protocol}\" %{NUMBER:response} %{NUMBER:bytes} (?:\"(?:%{URI:referrer}|-)\"|%{QS:referrer}) \"%{DATA:useragent}\" \"%{DATA:forwarded_for}\" \"%{DATA:auth_userid}\" %{BASE10NUM:time_taken} %{BASE10NUM:upstream_response_time_taken} %{URIHOST:serverhost} %{WORD:scheme}"]
        }
        useragent {
            source => "useragent"
        }
        geoip {
            source => "clienthost"
            add_tag => ["geoip"]
        }
        date {
            match => ["log_timestamp", "dd/MMM/YYYY:HH:mm:ss Z"]
            timezone => "Etc/UTC"
        }
        mutate {
            split => ["urls", "/"]
            strip => ["urls"]
        }
        if [urls] != [] and "_grokparsefailure" not in [tags] {
            if [urls][0] != "" and [urls][0] not in ["http:","https:"] {
                mutate {
                    add_field => {
                        "app_service" => "%{[urls][0]}"
                    }
                    add_tag => ["app_service"]
                }
            } else if [urls][1] != "" and [urls][1] not in ["http:","https:"] {
                mutate {
                    add_field => {
                        "app_service" => "%{[urls][1]}"
                    }
                    add_tag => ["app_service"]
                }
            } else {
                mutate {
                    add_field => {
                        "app_service" => "not match"
                    }
                }
            }
        } else {
            mutate {
                add_field => {
                    "app_service" => "not match"
                }
            }
        }
        mutate {
            remove_field => ["log_timestamp", "urls"]
            convert => {
                "response" => "integer"
                "bytes" => "float"
                "time_taken" => "float"
                "upstream_response_time_taken" => "float"
            }
        }
    }
}
output {
    elasticsearch {
        hosts => "elasticsearch:9200"
    }
}